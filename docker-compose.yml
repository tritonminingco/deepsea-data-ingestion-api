version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: deepsea_postgres
    environment:
      POSTGRES_DB: deepsea_db
      POSTGRES_USER: deepsea_user
      POSTGRES_PASSWORD: deepsea_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - deepsea_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U deepsea_user -d deepsea_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for real-time messaging
  redis:
    image: redis:7-alpine
    container_name: deepsea_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - deepsea_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  api:
    build: .
    container_name: deepsea_api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://deepsea_user:deepsea_password@postgres:5432/deepsea_db
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-change-in-production
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - deepsea_network
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        alembic upgrade head &&
        python scripts/sample_data.py &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: deepsea_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@deepsea.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - deepsea_network
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  deepsea_network:
    driver: bridge

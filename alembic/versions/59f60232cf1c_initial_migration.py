"""Initial migration

Revision ID: 59f60232cf1c
Revises: 
Create Date: 2025-08-12 22:18:27.902391

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '59f60232cf1c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('auv_id', sa.String(length=50), nullable=False),
    sa.Column('alert_type', sa.Enum('ENVIRONMENTAL', 'OPERATIONAL', 'COMPLIANCE', 'SYSTEM', 'SAFETY', name='alerttype'), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='alertseverity'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'ACKNOWLEDGED', 'RESOLVED', 'DISMISSED', name='alertstatus'), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('acknowledged_by', sa.String(length=100), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_by', sa.String(length=100), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('alert_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_auv_id'), 'alerts', ['auv_id'], unique=False)
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    op.create_index(op.f('ix_alerts_timestamp'), 'alerts', ['timestamp'], unique=False)
    op.create_table('auv_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('auv_id', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('depth', sa.Float(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('heading', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('battery_level', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('system_status', sa.String(length=50), nullable=True),
    sa.Column('mission_id', sa.String(length=100), nullable=True),
    sa.Column('mission_phase', sa.String(length=50), nullable=True),
    sa.Column('telemetry_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auv_data_auv_id'), 'auv_data', ['auv_id'], unique=False)
    op.create_index(op.f('ix_auv_data_id'), 'auv_data', ['id'], unique=False)
    op.create_index(op.f('ix_auv_data_timestamp'), 'auv_data', ['timestamp'], unique=False)
    op.create_table('isa_standards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('standard_code', sa.String(length=50), nullable=False),
    sa.Column('standard_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('effective_date', sa.DateTime(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_isa_standards_id'), 'isa_standards', ['id'], unique=False)
    op.create_index(op.f('ix_isa_standards_standard_code'), 'isa_standards', ['standard_code'], unique=True)
    op.create_table('isa_zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('zone_name', sa.String(length=100), nullable=False),
    sa.Column('zone_type', sa.Enum('OPERATIONAL', 'RESTRICTED', 'PROHIBITED', 'SAFETY', name='zonetype'), nullable=False),
    sa.Column('coordinates', sa.Text(), nullable=True),
    sa.Column('depth_range_min', sa.Float(), nullable=True),
    sa.Column('depth_range_max', sa.Float(), nullable=True),
    sa.Column('area_km2', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('restrictions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_isa_zones_id'), 'isa_zones', ['id'], unique=False)
    op.create_table('telemetry_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('auv_id', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('water_temperature', sa.Float(), nullable=True),
    sa.Column('salinity', sa.Float(), nullable=True),
    sa.Column('ph_level', sa.Float(), nullable=True),
    sa.Column('dissolved_oxygen', sa.Float(), nullable=True),
    sa.Column('turbidity', sa.Float(), nullable=True),
    sa.Column('current_speed', sa.Float(), nullable=True),
    sa.Column('current_direction', sa.Float(), nullable=True),
    sa.Column('sensor_data', sa.JSON(), nullable=True),
    sa.Column('data_quality_score', sa.Float(), nullable=True),
    sa.Column('sensor_status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_telemetry_data_auv_id'), 'telemetry_data', ['auv_id'], unique=False)
    op.create_index(op.f('ix_telemetry_data_id'), 'telemetry_data', ['id'], unique=False)
    op.create_index(op.f('ix_telemetry_data_timestamp'), 'telemetry_data', ['timestamp'], unique=False)
    op.create_table('isa_compliance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('auv_id', sa.String(length=50), nullable=False),
    sa.Column('standard_id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('COMPLIANT', 'NON_COMPLIANT', 'PENDING', 'UNDER_REVIEW', name='compliancestatus'), nullable=False),
    sa.Column('compliance_score', sa.Float(), nullable=True),
    sa.Column('last_assessment', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('next_assessment', sa.DateTime(timezone=True), nullable=True),
    sa.Column('zone_entry_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('zone_exit_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('zone_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('last_report_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_report_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reporting_status', sa.String(length=50), nullable=True),
    sa.Column('violations_count', sa.Integer(), nullable=True),
    sa.Column('violations_description', sa.Text(), nullable=True),
    sa.Column('corrective_actions', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['standard_id'], ['isa_standards.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['isa_zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_isa_compliance_auv_id'), 'isa_compliance', ['auv_id'], unique=False)
    op.create_index(op.f('ix_isa_compliance_id'), 'isa_compliance', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_isa_compliance_id'), table_name='isa_compliance')
    op.drop_index(op.f('ix_isa_compliance_auv_id'), table_name='isa_compliance')
    op.drop_table('isa_compliance')
    op.drop_index(op.f('ix_telemetry_data_timestamp'), table_name='telemetry_data')
    op.drop_index(op.f('ix_telemetry_data_id'), table_name='telemetry_data')
    op.drop_index(op.f('ix_telemetry_data_auv_id'), table_name='telemetry_data')
    op.drop_table('telemetry_data')
    op.drop_index(op.f('ix_isa_zones_id'), table_name='isa_zones')
    op.drop_table('isa_zones')
    op.drop_index(op.f('ix_isa_standards_standard_code'), table_name='isa_standards')
    op.drop_index(op.f('ix_isa_standards_id'), table_name='isa_standards')
    op.drop_table('isa_standards')
    op.drop_index(op.f('ix_auv_data_timestamp'), table_name='auv_data')
    op.drop_index(op.f('ix_auv_data_id'), table_name='auv_data')
    op.drop_index(op.f('ix_auv_data_auv_id'), table_name='auv_data')
    op.drop_table('auv_data')
    op.drop_index(op.f('ix_alerts_timestamp'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_auv_id'), table_name='alerts')
    op.drop_table('alerts')
    # ### end Alembic commands ###
